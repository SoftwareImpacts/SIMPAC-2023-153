==========
= README =
==========

The hyper2D_kinetic folder contains a simple implementation of the Hyper2D finite volume solver
for the Boltzmann/Vlasov equation in the 1D1V phase space (one-dimensional in physical space and 
one-dimensional in the velocity as well).
Label "x" denotes the space axis, while the label "y" is used in this version to denote the 
velocity axis, to keep the notation consistent with the other versions of hyper2D.

All input data is specified inside the global_module.f03 file. You can modify it there, then
compile and run the code.

Notice that the VTK output of the solution is nondimensionalized. That is, variables x and y
in the VTK file are divided by the interval length that you specify in the global_module.f03 
file. This is because the velocity and physical space axes are very different in dimension, 
and plotting them in VTK requires some scaling. You just need to re-multiply the x and y 
axes by the physical domain length and velocity if you want dimensional axes.

==================================
= COMPILING AND RUNNING THE CODE =
==================================

For compiling the code, go into the src directory and type "make".
This will create the 'hyper2d.exe' executable file. 
Copy it to the desired location and run it with:

$ ./hyper2d.exe

*****
***** NOTE THAT hyper2d WILL ATTEMPT TO WRITE THE OUTPUT INSIDE A LOCAL "dumps"
***** DIRECTORY. YOU NEED TO CREATE IT!
*****

=========================
= STRUCTURE OF THE CODE =
=========================

The hyper2d.f03 contains the main program.
The global settings are implemented in the global_module.f03 file.
The PDEs are implemented in the pde.f03 file.
The time integrator and the computation of numerical fluxes are inside integrator.f03.
The routine for exporting to VTK is in tools.f03.

The program goes like this:
1) The solution is initialized (calling pde.f03)
2) Boundary conditions are applied (calling pde.f03)
3) Time integration starts (calling integration.f03)
  3.1) Numerical fluxes are computed 
  3.2) The solution is updated in time
4) The solution is exported (calling tools.f03)


